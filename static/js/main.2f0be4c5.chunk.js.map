{"version":3,"sources":["api/api.ts","components/BookCard/BookCard.tsx","components/BooksList/BookList.tsx","App.tsx","index.js"],"names":["getBooks","title","sort","category","a","fetch","then","res","json","books","BookCard","item","book","volumeInfo","className","href","previewLink","target","rel","src","imageLinks","thumbnail","alt","categories","filter","cat","authors","map","aut","join","BookList","totalBook","allBook","id","App","useState","setTotalBook","setAllBook","searchBook","setSearchBook","selectedCategory","setSelectedCategory","sortBy","setSortBy","getBook","found","items","totalItems","onSubmit","event","preventDefault","type","placeholder","value","onChange","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f0be4c5.chunk.js","sourcesContent":["export async function getBooks(title: string, sort: string, category: string) {\r\n  // добавить обработку ошибок\r\n\r\n  // const key = 'AIzaSyBBA37PHb5UjrZfGBvNsHUF8xct7TRybJ8';\r\n\r\n  const books = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${title}+subject:${category}&orderBy=${sort}&maxResults=30`)\r\n    .then(res => res.json())\r\n\r\n  return books;\r\n}\r\n","import React from 'react';\r\nimport './BookCard.scss';\r\n\r\ntype Props = {\r\n  book: Book,\r\n};\r\n\r\nexport const BookCard: React.FC<Props> = ({ book }) => {\r\n  const item = book.volumeInfo;\r\n  const defaultCover = 'https://ruslania.com/pictures/books_photos/30/309288/9785917615868_l.jpg';\r\n\r\n  return (\r\n    <div className=\"BookCard\">\r\n      <div>\r\n        <a\r\n          href={item.previewLink}\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n          className=\"BookCard__link\"\r\n        >\r\n          <img\r\n            className=\"BookCard__img\"\r\n            src={item.imageLinks?.thumbnail || defaultCover}\r\n            alt=\"Book cover\"\r\n          />\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"BookCard__info\">\r\n        <p  className=\"BookCard__info--category\">\r\n          {item.categories?.filter(cat => cat[0]) || 'No category'}\r\n        </p>\r\n\r\n        <h3  className=\"BookCard__info--title\">\r\n          {item.title}\r\n        </h3>\r\n\r\n        <p  className=\"BookCard__info--autor\">\r\n          {item.authors?.map(aut => aut).join(', ') || 'Author unknown'}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './BookList.scss';\r\nimport '../BookCard/BookCard';\r\nimport { BookCard } from '../BookCard/BookCard';\r\n\r\ntype Props = {\r\n  totalBook: string | number,\r\n  allBook: Book[],\r\n};\r\n\r\nexport const BookList: React.FC<Props> = ({ totalBook, allBook }) => {\r\n  return (\r\n    <div className=\"BookList\">\r\n      {/* <h2 className=\"BookList__count\">\r\n        {totalBook > 0 ? `Found ${totalBook} results` : 'Not found any book'}\r\n      </h2> */}\r\n      <ul className=\"BookList__list\">\r\n        {allBook && allBook.map(book =>\r\n          <li\r\n            key={book.id}\r\n            className=\"BookList__list--item\"\r\n          >\r\n            <BookCard book={book} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\nimport { getBooks } from './api/api';\nimport { BookList } from './components/BooksList/BookList';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [totalBook, setTotalBook] = useState<string | number>('')\n  const [allBook, setAllBook] = useState<Book[]>([]);\n  const [searchBook, setSearchBook] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState<string>('');\n  const [sortBy, setSortBy] = useState<string>('relevance');\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchBook(event.target.value);\n  };\n\n  const handleSelectedFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedCategory(event.target.value);\n  };\n\n  const handleSelectedSort = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSortBy(event.target.value);\n  };\n\n  const getBook = async () => {\n    const found = await getBooks(searchBook, sortBy, selectedCategory);\n\n    setAllBook(found.items);\n    setTotalBook(found.totalItems)\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__header\">\n        <h1 className=\"App__title\">Search for books</h1>\n\n        <form\n          className=\"App__form\"\n          onSubmit={(event) => {\n            event.preventDefault();\n            // setSearchBook('');\n          }}\n        >\n          <input\n            type=\"text\"\n            className=\"App__form--item\"\n            placeholder=\"Search book\"\n            value={searchBook}\n            onChange={handleInput}\n          />\n\n          Categories\n          <select\n            value={selectedCategory}\n            onChange={handleSelectedFilter}\n            className=\"App__form--item\"\n          >\n            <option value=\"\">All</option>\n            <option value=\"art\">Art</option>\n            <option value=\"biography\">Biography</option>\n            <option value=\"computers\">Computers</option>\n            <option value=\"history\">History</option>\n            <option value=\"medical\">Medical</option>\n            <option value=\"poetry\">Poetry</option>\n          </select>\n\n          Sorting by\n          <select\n            value={sortBy}\n            onChange={handleSelectedSort}\n            className=\"App__form--item\"\n          >\n            <option value=\"relevance\">Relevance</option>\n            <option value=\"newest\">Newest</option>\n          </select>\n\n          <button\n            className=\"App__form--item\"\n            onClick={() => {\n              getBook();\n            }}\n          >\n            Search\n          </button>\n\n        </form>\n\n        <h2 className=\"BookList__count\">\n          {totalBook > 0 ? `Found ${totalBook} results` : 'Not found any book'}\n        </h2>\n      </div>\n\n      <BookList\n        totalBook={totalBook}\n        allBook={allBook}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}