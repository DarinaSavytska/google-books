{"version":3,"sources":["api/api.ts","components/BookCard/BookCard.tsx","components/CurrentBook/CurrentBook.tsx","components/BooksList/BookList.tsx","App.tsx","index.js"],"names":["getBooks","title","sort","category","a","fetch","then","res","json","books","BookCard","book","changePage","item","volumeInfo","className","href","previewLink","target","rel","src","imageLinks","thumbnail","alt","categories","filter","cat","onClick","authors","map","aut","join","CurrentBook","BookList","allBook","useState","pageInfo","setPageInfo","changePageSelectedBook","id","App","totalBook","setTotalBook","setAllBook","searchBook","setSearchBook","selectedCategory","setSelectedCategory","sortBy","setSortBy","showMessage","setShowMessage","getBook","found","items","totalItems","onSubmit","event","preventDefault","type","placeholder","value","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6de9eff3.chunk.js","sourcesContent":["export async function getBooks(title: string, sort: string, category: string) {\r\n  // добавить обработку ошибок\r\n\r\n  // const key = 'AIzaSyBBA37PHb5UjrZfGBvNsHUF8xct7TRybJ8';\r\n\r\n  const books = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${title}+subject:${category}&orderBy=${sort}&maxResults=30`)\r\n    .then(res => res.json());\r\n\r\n  return books;\r\n}\r\n\r\n/*\r\n{\r\n  \"error\": {\r\n    \"code\": 403,\r\n    \"message\": \"SSL is required to perform this operation.\",\r\n    \"errors\": [\r\n      {\r\n        \"message\": \"SSL is required to perform this operation.\",\r\n        \"domain\": \"global\",\r\n        \"reason\": \"sslRequired\"\r\n      }\r\n    ],\r\n    \"status\": \"PERMISSION_DENIED\"\r\n  }\r\n}\r\n*/\r\n","import React from 'react';\r\nimport './BookCard.scss';\r\n\r\ntype Props = {\r\n  book: Book,\r\n  changePage: () => void,\r\n};\r\n\r\nexport const BookCard: React.FC<Props> = ({ book, changePage }) => {\r\n  const item = book.volumeInfo;\r\n  const defaultCover = 'https://ruslania.com/pictures/books_photos/30/309288/9785917615868_l.jpg';\r\n\r\n  return (\r\n    <div className=\"BookCard\">\r\n      <div>\r\n        <a\r\n          href={item.previewLink}\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n          className=\"BookCard__link\"\r\n        >\r\n          <img\r\n            title=\"Search in google books\"\r\n            className=\"BookCard__img\"\r\n            src={item.imageLinks?.thumbnail || defaultCover}\r\n            alt=\"Book cover\"\r\n          />\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"BookCard__info\">\r\n        <p  className=\"BookCard__info--category\">\r\n          {item.categories?.filter(cat => cat[0]) || 'No category'}\r\n        </p>\r\n\r\n        <h3\r\n          className=\"BookCard__info--title\"\r\n          title=\"More about the book\"\r\n          onClick={changePage}\r\n        >\r\n          {item.title}\r\n        </h3>\r\n\r\n        <p  className=\"BookCard__info--autor\">\r\n          {item.authors?.map(aut => aut).join(', ') || 'Author unknown'}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\ntype Props = {\r\n  changePage: () => void,\r\n};\r\n\r\nexport const CurrentBook: React.FC<Props> = ({ changePage }) => {\r\n  return (\r\n    <h1 onClick={changePage}>Selected book</h1>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport './BookList.scss';\r\nimport '../BookCard/BookCard';\r\nimport { BookCard } from '../BookCard/BookCard';\r\nimport { CurrentBook } from '../CurrentBook/CurrentBook';\r\n\r\ntype Props = {\r\n  allBook: Book[],\r\n};\r\n\r\nexport const BookList: React.FC<Props> = ({ allBook }) => {\r\n  const [pageInfo, setPageInfo] = useState('list');\r\n\r\n  const changePageSelectedBook = () => {\r\n    setPageInfo('book');\r\n  };\r\n\r\n  const changePageBookList = () => {\r\n    setPageInfo('list');\r\n  };\r\n\r\n  return (\r\n    <div className=\"BookList\">\r\n      {pageInfo === 'list' && (\r\n        <ul className=\"BookList__list\">\r\n          {allBook && allBook.map(book =>\r\n            <li\r\n              key={book.id}\r\n              className=\"BookList__list--item\"\r\n            >\r\n              <BookCard book={book} changePage={changePageSelectedBook} />\r\n            </li>\r\n          )}\r\n        </ul>\r\n      )}\r\n\r\n      {pageInfo === 'book' && <CurrentBook changePage={changePageBookList} />}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\nimport { getBooks } from './api/api';\nimport { BookList } from './components/BooksList/BookList';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [totalBook, setTotalBook] = useState<string | number>('')\n  const [allBook, setAllBook] = useState<Book[]>([]);\n  const [searchBook, setSearchBook] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState<string>('');\n  const [sortBy, setSortBy] = useState<string>('relevance');\n  const [showMessage, setShowMessage] = useState<boolean>(false);\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchBook(event.target.value);\n  };\n\n  const handleSelectedFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedCategory(event.target.value);\n  };\n\n  const handleSelectedSort = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSortBy(event.target.value);\n  };\n\n  const getBook = async () => {\n    const found = await getBooks(searchBook, sortBy, selectedCategory);\n\n    setAllBook(found.items);\n    setTotalBook(found.totalItems)\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__header\">\n        <h1 className=\"App__title\">Search for books</h1>\n\n        <form\n          className=\"App__form\"\n          onSubmit={(event) => {\n            event.preventDefault();\n            setSearchBook('');\n          }}\n        >\n          <input\n            type=\"text\"\n            className=\"App__form--item\"\n            placeholder=\"Search book\"\n            value={searchBook}\n            onChange={handleInput}\n          />\n\n          <div>\n            {'Categories '}\n            <select\n              value={selectedCategory}\n              onChange={handleSelectedFilter}\n              className=\"App__form--item\"\n            >\n              <option value=\"\">All</option>\n              <option value=\"art\">Art</option>\n              <option value=\"biography\">Biography</option>\n              <option value=\"computers\">Computers</option>\n              <option value=\"history\">History</option>\n              <option value=\"medical\">Medical</option>\n              <option value=\"poetry\">Poetry</option>\n            </select>\n          </div>\n\n          <div>\n            {'Sorting by '}\n            <select\n              value={sortBy}\n              onChange={handleSelectedSort}\n              className=\"App__form--item\"\n            >\n              <option value=\"relevance\">Relevance</option>\n              <option value=\"newest\">Newest</option>\n            </select>\n          </div>\n\n          <button\n            className=\"App__form--item\"\n            onClick={() => {\n              getBook();\n              setShowMessage(true);\n            }}\n          >\n            Search\n          </button>\n\n        </form>\n\n        {showMessage && (\n          <h2 className=\"BookList__count\">\n            {totalBook > 0 ? `Found ${totalBook} results` : 'Not found any book'}\n          </h2>\n        )}\n      </div>\n\n      <BookList\n        allBook={allBook}\n      />\n\n      {totalBook > 0 &&\n        <a\n          href=\"#root\"\n          className=\"App__buttonUp\"\n        >\n          &uarr;\n        </a>\n      }\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}