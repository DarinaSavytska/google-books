{"version":3,"sources":["api/api.ts","components/BookCard/BookCard.tsx","components/CurrentBook/CurrentBook.tsx","components/BooksList/BookList.tsx","App.tsx","index.js"],"names":["getBooks","title","sort","category","a","fetch","then","res","json","books","BookCard","book","changePage","test","volume","volumeInfo","className","href","previewLink","target","rel","src","imageLinks","thumbnail","alt","categories","filter","cat","onClick","authors","map","aut","join","CurrentBook","cover","bookCover","extraLarge","large","medium","small","smallThumbnail","cata","id","autor","description","BookList","allBook","useState","selectedBook","setSelectedBook","pageInfo","setPageInfo","changePageSelectedBook","console","log","App","totalBook","setTotalBook","setAllBook","searchBook","setSearchBook","selectedCategory","setSelectedCategory","sortBy","setSortBy","showMessage","setShowMessage","getBook","found","items","totalItems","onSubmit","event","preventDefault","type","placeholder","value","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72d1b39b.chunk.js","sourcesContent":["export async function getBooks(title: string, sort: string, category: string) {\r\n  // добавить обработку ошибок\r\n\r\n  // const key = 'AIzaSyBBA37PHb5UjrZfGBvNsHUF8xct7TRybJ8';\r\n\r\n  const books = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${title}+subject:${category}&orderBy=${sort}&maxResults=30`)\r\n    .then(res => res.json());\r\n\r\n  return books;\r\n}\r\n\r\n/*\r\n{\r\n  \"error\": {\r\n    \"code\": 403,\r\n    \"message\": \"SSL is required to perform this operation.\",\r\n    \"errors\": [\r\n      {\r\n        \"message\": \"SSL is required to perform this operation.\",\r\n        \"domain\": \"global\",\r\n        \"reason\": \"sslRequired\"\r\n      }\r\n    ],\r\n    \"status\": \"PERMISSION_DENIED\"\r\n  }\r\n}\r\n*/\r\n","import React from 'react';\r\nimport './BookCard.scss';\r\n\r\ntype Props = {\r\n  book: Book,\r\n  changePage: () => void,\r\n  test: (book: Book) => void,\r\n};\r\n\r\nexport const BookCard: React.FC<Props> = ({ book, changePage, test }) => {\r\n  const volume = book.volumeInfo;\r\n  const defaultCover = 'https://ruslania.com/pictures/books_photos/30/309288/9785917615868_l.jpg';\r\n\r\n  return (\r\n    <div className=\"BookCard\">\r\n      <div>\r\n        <a\r\n          href={volume.previewLink}\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n          className=\"BookCard__link\"\r\n        >\r\n          <img\r\n            title=\"Search in google books\"\r\n            className=\"BookCard__img\"\r\n            src={volume.imageLinks?.thumbnail || defaultCover}\r\n            alt=\"Book cover\"\r\n          />\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"BookCard__info\">\r\n        <p className=\"BookCard__info--category\">\r\n          {volume.categories?.filter(cat => cat[0]) || 'No category'}\r\n        </p>\r\n\r\n        <h3\r\n          className=\"BookCard__info--title\"\r\n          title=\"More about the book\"\r\n          onClick={() => {\r\n            changePage();\r\n            test(book);\r\n          }}\r\n        >\r\n          {volume.title}\r\n        </h3>\r\n\r\n        <p className=\"BookCard__info--autor\">\r\n          {volume.authors?.map(aut => aut).join(', ')}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './CurrentBook.scss';\r\n\r\ntype Props = {\r\n  changePage: () => void,\r\n  book: Book,\r\n};\r\n\r\nexport const CurrentBook: React.FC<Props> = ({ changePage, book }) => {\r\n  const volume = book.volumeInfo;\r\n  const cover: BookImage = volume.imageLinks;\r\n  const defaultCover = 'https://ruslania.com/pictures/books_photos/30/309288/9785917615868_l.jpg';\r\n  const bookCover = cover?.extraLarge || cover?.large || cover?.medium || cover?.small || cover?.smallThumbnail || cover?.thumbnail;\r\n\r\n  return (\r\n    <div className=\"CurrentBook\">\r\n      <h2\r\n        className=\"CurrentBook__title\"\r\n        onClick={changePage}\r\n      >\r\n        Return to books list\r\n      </h2>\r\n\r\n      <div className=\"CurrentBook__book\">\r\n        <img\r\n          className=\"CurrentBook__book--img\"\r\n          src={bookCover || defaultCover}\r\n          alt=\"Book cover\"\r\n        />\r\n\r\n        <div className=\"CurrentBook__info\">\r\n          <ul>\r\n            {volume.categories?.map(cata => <li key={book.id}>{cata}</li>)}\r\n          </ul>\r\n\r\n          <h3>\r\n            {volume.title}\r\n          </h3>\r\n\r\n          <ul>\r\n            {volume.authors.map(autor => <li key={book.id}>{autor}</li>)}\r\n          </ul>\r\n\r\n          <p>\r\n            {volume.description}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport './BookList.scss';\r\nimport '../BookCard/BookCard';\r\nimport { BookCard } from '../BookCard/BookCard';\r\nimport { CurrentBook } from '../CurrentBook/CurrentBook';\r\n\r\ntype Props = {\r\n  allBook: Book[],\r\n};\r\n\r\nexport const BookList: React.FC<Props> = ({ allBook }) => {\r\n  const [selectedBook, setSelectedBook] = useState({} as Book);\r\n  const [pageInfo, setPageInfo] = useState('list');\r\n\r\n  const changePageSelectedBook = () => {\r\n    setPageInfo('book');\r\n  };\r\n\r\n  const changePageBookList = () => {\r\n    setPageInfo('list');\r\n  };\r\n\r\n  const test = (book: Book) => {\r\n    setSelectedBook(book);\r\n  };\r\n\r\n  return (\r\n    <div className=\"BookList\">\r\n      {pageInfo === 'list' &&\r\n        < ul className=\"BookList__list\">\r\n          {allBook && allBook.map(book =>\r\n            <li\r\n              key={book.id}\r\n              className=\"BookList__list--item\"\r\n            >\r\n              {console.log(allBook)}\r\n              <BookCard book={book} changePage={changePageSelectedBook} test={test} />\r\n            </li>\r\n          )}\r\n        </ul>\r\n      }\r\n\r\n      {pageInfo === 'book' && <CurrentBook changePage={changePageBookList} book={selectedBook} />}\r\n    </div >\r\n  );\r\n};\r\n","import React, { useState } from 'react';\nimport { getBooks } from './api/api';\nimport { BookList } from './components/BooksList/BookList';\nimport './App.scss';\n// import { Link, Route } from 'react-router-dom';\n\nexport const App: React.FC = () => {\n  const [totalBook, setTotalBook] = useState<string | number>('')\n  const [allBook, setAllBook] = useState<Book[]>([]);\n  const [searchBook, setSearchBook] = useState('The Google Story (2018 Updated Edition)');\n  const [selectedCategory, setSelectedCategory] = useState<string>('');\n  const [sortBy, setSortBy] = useState<string>('relevance');\n  const [showMessage, setShowMessage] = useState<boolean>(false);\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchBook(event.target.value);\n  };\n\n  const handleSelectedFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedCategory(event.target.value);\n  };\n\n  const handleSelectedSort = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSortBy(event.target.value);\n  };\n\n  const getBook = async () => {\n    const found = await getBooks(searchBook, sortBy, selectedCategory);\n\n    setAllBook(found.items);\n    setTotalBook(found.totalItems)\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__header\">\n        <h1 className=\"App__title\">Search for books</h1>\n        {/* <p className=\"App__title\">\n          The Google Story (2018 Updated Edition)\n        </p> */}\n\n        <form\n          className=\"App__form\"\n          onSubmit={(event) => {\n            event.preventDefault();\n            // setSearchBook('');\n          }}\n        >\n          <input\n            type=\"text\"\n            className=\"App__form--item App__input\"\n            placeholder=\"Search book\"\n            value={searchBook}\n            onChange={handleInput}\n          />\n\n          <div>\n            {'Categories '}\n            <select\n              value={selectedCategory}\n              onChange={handleSelectedFilter}\n              className=\"App__form--item\"\n            >\n              <option value=\"\">All</option>\n              <option value=\"art\">Art</option>\n              <option value=\"biography\">Biography</option>\n              <option value=\"computers\">Computers</option>\n              <option value=\"history\">History</option>\n              <option value=\"medical\">Medical</option>\n              <option value=\"poetry\">Poetry</option>\n            </select>\n          </div>\n\n          <div>\n            {'Sorting by '}\n            <select\n              value={sortBy}\n              onChange={handleSelectedSort}\n              className=\"App__form--item\"\n            >\n              <option value=\"relevance\">Relevance</option>\n              <option value=\"newest\">Newest</option>\n            </select>\n          </div>\n\n          <button\n            className=\"App__form--item\"\n            onClick={() => {\n              getBook();\n              setShowMessage(true);\n            }}\n          >\n            Search\n          </button>\n\n        </form>\n\n        {showMessage && (\n          <h2 className=\"BookList__count\">\n            {totalBook > 0 ? `Found ${totalBook} results` : 'Not found any book'}\n          </h2>\n        )}\n      </div>\n\n      {/* <Route path=\"/book-list\"> */}\n        <BookList\n          allBook={allBook}\n        />\n      {/* </Route> */}\n\n      {totalBook > 0 &&\n        <a\n          href=\"#root\"\n          className=\"App__buttonUp\"\n        >\n          &uarr;\n        </a>\n      }\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n// import { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  // <BrowserRouter>\n    <App />,\n  // </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}