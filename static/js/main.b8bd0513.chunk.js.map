{"version":3,"sources":["api/api.ts","components/BookCard/BookCard.tsx","components/CurrentBook/CurrentBook.tsx","components/BooksList/BookList.tsx","components/FormList/FormList.tsx","App.tsx","index.js"],"names":["getBooks","title","sort","category","a","fetch","then","res","json","books","BookCard","book","changePage","test","volume","volumeInfo","className","href","previewLink","target","rel","src","imageLinks","thumbnail","alt","categories","filter","cat","onClick","authors","map","aut","join","CurrentBook","cover","bookCover","extraLarge","large","medium","small","smallThumbnail","console","log","cata","id","autor","description","BookList","allBook","showMessage","totalBook","useState","selectedBook","setSelectedBook","pageInfo","setPageInfo","changePageSelectedBook","FormList","searchBook","setSearchBook","selectedCategory","setSelectedCategory","sortBy","setSortBy","getBook","setLoad","setShowMessage","onSubmit","event","preventDefault","type","placeholder","value","onChange","App","setTotalBook","setAllBook","load","found","items","totalItems","ReactDOM","render","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.b8bd0513.chunk.js","sourcesContent":["export async function getBooks(title: string, sort: string, category: string) {\r\n  // добавить обработку ошибок\r\n\r\n  // const key = 'AIzaSyBBA37PHb5UjrZfGBvNsHUF8xct7TRybJ8';\r\n\r\n  const books = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${title}+subject:${category}&orderBy=${sort}&maxResults=30`)\r\n    .then(res => res.json());\r\n\r\n  return books;\r\n}\r\n\r\n/*\r\n{\r\n  \"error\": {\r\n    \"code\": 403,\r\n    \"message\": \"SSL is required to perform this operation.\",\r\n    \"errors\": [\r\n      {\r\n        \"message\": \"SSL is required to perform this operation.\",\r\n        \"domain\": \"global\",\r\n        \"reason\": \"sslRequired\"\r\n      }\r\n    ],\r\n    \"status\": \"PERMISSION_DENIED\"\r\n  }\r\n}\r\n*/\r\n","import React from 'react';\r\nimport './BookCard.scss';\r\n\r\ntype Props = {\r\n  book: Book,\r\n  changePage: () => void,\r\n  test: (book: Book) => void,\r\n};\r\n\r\nexport const BookCard: React.FC<Props> = ({ book, changePage, test }) => {\r\n  const volume = book.volumeInfo;\r\n  const defaultCover = 'https://ruslania.com/pictures/books_photos/30/309288/9785917615868_l.jpg';\r\n\r\n  return (\r\n    <div className=\"BookCard\">\r\n      <div>\r\n        <a\r\n          href={volume.previewLink}\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n          className=\"BookCard__link\"\r\n        >\r\n          <img\r\n            title=\"Search in google books\"\r\n            className=\"BookCard__img\"\r\n            src={volume.imageLinks?.thumbnail || defaultCover}\r\n            alt=\"Book cover\"\r\n          />\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"BookCard__info\">\r\n        <p className=\"BookCard__info--category\">\r\n          {volume.categories?.filter(cat => cat[0]) || 'No category'}\r\n        </p>\r\n\r\n        <h3\r\n          className=\"BookCard__info--title\"\r\n          title=\"More about the book\"\r\n          onClick={() => {\r\n            changePage();\r\n            test(book);\r\n          }}\r\n        >\r\n          {volume.title}\r\n        </h3>\r\n\r\n        <p className=\"BookCard__info--autor\">\r\n          {volume.authors?.map(aut => aut).join(', ')}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './CurrentBook.scss';\r\n\r\ntype Props = {\r\n  changePage: () => void,\r\n  book: Book,\r\n};\r\n\r\nexport const CurrentBook: React.FC<Props> = ({ changePage, book }) => {\r\n  const volume = book.volumeInfo;\r\n  const cover: BookImage = volume.imageLinks;\r\n  const defaultCover = 'https://ruslania.com/pictures/books_photos/30/309288/9785917615868_l.jpg';\r\n  const bookCover = cover?.extraLarge || cover?.large || cover?.medium || cover?.small || cover?.smallThumbnail || cover?.thumbnail;\r\n\r\n  return (\r\n    <div className=\"CurrentBook\">\r\n      {/* <img src=\"http://books.google.com/books/content?id=zyTCAlFPjgYC&printsec=frontcover&img=1&zoom=4&edge=curl&imgtk=AFLRE73m7azsyCO7ExCJm4L8xiIxVKwXuPtpB-j4iXXHkpayOID078jGh4Z-kGi2eiM0wCQVV1j6fhjUVLSQhd82YRJs5wzEHjAuaUrqDReM7EZfLb7cHY6ATGafxGcZP3jfOp1VQwzv&source=gbs_api\" alt=\"\" /> */}\r\n      <h2\r\n        className=\"CurrentBook__title\"\r\n        onClick={changePage}\r\n      >\r\n        Return to books list\r\n        {console.log(volume)}\r\n      </h2>\r\n\r\n      <div className=\"CurrentBook__book\">\r\n        <img\r\n          className=\"CurrentBook__book--img\"\r\n          src={bookCover || defaultCover}\r\n          alt=\"Book cover\"\r\n        />\r\n\r\n        <div className=\"CurrentBook__info\">\r\n          <ul>\r\n            {volume.categories?.map(cata => <li key={book.id}>{cata}</li>)}\r\n          </ul>\r\n\r\n          <h3>\r\n            {volume.title}\r\n          </h3>\r\n\r\n          <ul>\r\n            {volume.authors.map(autor => <li key={book.id}>{autor}</li>)}\r\n          </ul>\r\n\r\n          <p>\r\n            {volume.description}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport './BookList.scss';\r\nimport '../BookCard/BookCard';\r\nimport { BookCard } from '../BookCard/BookCard';\r\nimport { CurrentBook } from '../CurrentBook/CurrentBook';\r\n// import { Route } from 'react-router-dom';\r\n\r\ntype Props = {\r\n  allBook: Book[],\r\n  showMessage: boolean,\r\n  totalBook: string | number\r\n};\r\n\r\nexport const BookList: React.FC<Props> = ({ allBook, showMessage, totalBook }) => {\r\n  const [selectedBook, setSelectedBook] = useState({} as Book);\r\n  const [pageInfo, setPageInfo] = useState('list');\r\n\r\n  console.log(selectedBook);\r\n\r\n  const changePageSelectedBook = () => {\r\n    setPageInfo('book');\r\n  };\r\n\r\n  const changePageBookList = () => {\r\n    setPageInfo('list');\r\n  };\r\n\r\n  const test = (book: Book) => {\r\n    setSelectedBook(book);\r\n  };\r\n\r\n  return (\r\n    <div className=\"BookList\">\r\n      {/* <Route path=\"/list\">\r\n        < ul className=\"BookList__list\">\r\n          {allBook && allBook.map(book =>\r\n            <li\r\n              key={book.id}\r\n              className=\"BookList__list--item\"\r\n            >\r\n              {console.log(allBook)}\r\n              <BookCard book={book} test={test} />\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </Route> */}\r\n\r\n      {/* <Route path=\"/book\">\r\n        <CurrentBook book={selectedBook} />\r\n      </Route> */}\r\n\r\n      {showMessage && (\r\n        <h2 className=\"BookList__count\">\r\n          {totalBook > 0 ? `Found ${totalBook} results` : 'Not found any book'}\r\n        </h2>\r\n      )}\r\n\r\n      {pageInfo === 'list' &&\r\n        < ul className=\"BookList__list\">\r\n          {allBook && allBook.map(book =>\r\n            <li\r\n              key={book.id}\r\n              className=\"BookList__list--item\"\r\n            >\r\n              {/* {console.log(allBook)} */}\r\n              <BookCard book={book} changePage={changePageSelectedBook} test={test} />\r\n            </li>\r\n          )}\r\n        </ul>\r\n      }\r\n\r\n      {pageInfo === 'book' && <CurrentBook changePage={changePageBookList} book={selectedBook} />}\r\n    </div >\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\ntype Props = {\r\n  searchBook: string,\r\n  setSearchBook: (event: string) => void,\r\n  selectedCategory: string,\r\n  setSelectedCategory: (event: string) => void,\r\n  sortBy: string,\r\n  setSortBy: (event: string) => void,\r\n  getBook: () => void,\r\n  totalBook: string | number,\r\n  setLoad: (text: string) => void,\r\n  setShowMessage: (mes: boolean) => void,\r\n}\r\n\r\nexport const FormList: React.FC<Props> = ({\r\n  searchBook,\r\n  setSearchBook,\r\n  selectedCategory,\r\n  setSelectedCategory,\r\n  sortBy,\r\n  setSortBy,\r\n  getBook,\r\n  totalBook,\r\n  setLoad,\r\n  setShowMessage\r\n}) => {\r\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchBook(event.target.value);\r\n  };\r\n\r\n  const handleSelectedFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectedCategory(event.target.value);\r\n  };\r\n\r\n  const handleSelectedSort = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSortBy(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form\r\n        className=\"App__form\"\r\n        onSubmit={(event) => {\r\n          event.preventDefault();\r\n          // setSearchBook('');\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          className=\"App__form--item App__input\"\r\n          placeholder=\"Search book\"\r\n          value={searchBook}\r\n          onChange={handleInput}\r\n        />\r\n\r\n        <div>\r\n          {'Categories '}\r\n          <select\r\n            value={selectedCategory}\r\n            onChange={handleSelectedFilter}\r\n            className=\"App__form--item\"\r\n          >\r\n            <option value=\"\">All</option>\r\n            <option value=\"art\">Art</option>\r\n            <option value=\"biography\">Biography</option>\r\n            <option value=\"computers\">Computers</option>\r\n            <option value=\"history\">History</option>\r\n            <option value=\"medical\">Medical</option>\r\n            <option value=\"poetry\">Poetry</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          {'Sorting by '}\r\n          <select\r\n            value={sortBy}\r\n            onChange={handleSelectedSort}\r\n            className=\"App__form--item\"\r\n          >\r\n            <option value=\"relevance\">Relevance</option>\r\n            <option value=\"newest\">Newest</option>\r\n          </select>\r\n        </div>\r\n\r\n        <button\r\n          className=\"App__form--item\"\r\n          onClick={() => {\r\n            getBook();\r\n            setShowMessage(true);\r\n            setLoad('load')\r\n          }}\r\n        >\r\n          Search\r\n        </button>\r\n\r\n      </form>\r\n\r\n      {totalBook > 0 &&\r\n        <a\r\n          href=\"#root\"\r\n          className=\"App__buttonUp\"\r\n        >\r\n          &uarr;\r\n        </a>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\nimport { getBooks } from './api/api';\nimport { BookList } from './components/BooksList/BookList';\nimport './App.scss';\nimport { FormList } from './components/FormList/FormList';\n\nexport const App: React.FC = () => {\n  const [totalBook, setTotalBook] = useState<string | number>('')\n  const [allBook, setAllBook] = useState<Book[]>([]);\n  const [searchBook, setSearchBook] = useState('The Google Story (2018 Updated Edition)');\n  const [selectedCategory, setSelectedCategory] = useState<string>('');\n  const [sortBy, setSortBy] = useState<string>('relevance');\n  const [load, setLoad] = useState('');\n  const [showMessage, setShowMessage] = useState<boolean>(false);\n\n\n  const getBook = async () => {\n    const found = await getBooks(searchBook, sortBy, selectedCategory);\n\n    if (found) {\n      setLoad('finish');\n    }\n\n    setAllBook(found.items);\n    setTotalBook(found.totalItems)\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__header\">\n        <h1 className=\"App__title\">Search for books</h1>\n\n        <FormList\n          searchBook={searchBook}\n          setSearchBook={setSearchBook}\n          selectedCategory={selectedCategory}\n          setSelectedCategory={setSelectedCategory}\n          sortBy={sortBy}\n          setSortBy={setSortBy}\n          getBook={getBook}\n          totalBook={totalBook}\n          setLoad={setLoad}\n          setShowMessage={setShowMessage}\n        />\n      </div>\n\n      {load === 'load' && (\n        <div className=\"App__preloader\">\n          <div className=\"App__preloader--loader\"></div>\n        </div>\n      )}\n\n      {load === 'finish' &&\n        <BookList\n          allBook={allBook}\n          showMessage={showMessage}\n          totalBook={totalBook}\n        />}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}