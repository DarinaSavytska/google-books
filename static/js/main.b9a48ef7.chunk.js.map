{"version":3,"sources":["api/api.ts","components/BookCard/BookCard.tsx","components/CurrentBook/CurrentBook.tsx","components/BooksList/BookList.tsx","components/FormList/FormList.tsx","App.tsx","index.js"],"names":["getBooks","title","sort","category","page","a","fetch","then","res","json","books","id","book","BookCard","changePage","bookSelection","volume","volumeInfo","className","href","previewLink","target","rel","src","imageLinks","thumbnail","alt","categories","filter","cat","onClick","authors","map","aut","join","CurrentBook","useState","setVolume","useEffect","getBookById","foundBook","cover","bookCover","medium","small","smallThumbnail","cata","autor","dangerouslySetInnerHTML","__html","description","BookList","allBook","showMessage","totalBook","getBook","setPage","setLoad","selectedBook","setSelectedBook","pageInfo","setPageInfo","changePageSelectedBook","type","FormList","searchBook","setSearchBook","selectedCategory","setSelectedCategory","sortBy","setSortBy","setShowMessage","onSubmit","event","preventDefault","placeholder","value","onChange","App","setTotalBook","setAllBook","load","console","log","found","items","totalItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9a48ef7.chunk.js","sourcesContent":["export async function getBooks(\r\n  title: string,\r\n  sort: string,\r\n  category: string,\r\n  page: number\r\n  ) {\r\n  // const key = 'AIzaSyBBA37PHb5UjrZfGBvNsHUF8xct7TRybJ8';\r\n\r\n  const books = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${title}+subject:${category}&orderBy=${sort}&startIndex=${page}&maxResults=30`)\r\n    .then(res => res.json());\r\n\r\n  return books;\r\n}\r\n\r\nexport async function getBookById(id: string) {\r\n  const book = await fetch(`https://www.googleapis.com/books/v1/volumes/${id}`)\r\n    .then(res => res.json());\r\n\r\n    return book;\r\n}\r\n\r\n/*\r\n{\r\n  \"error\": {\r\n    \"code\": 403,\r\n    \"message\": \"SSL is required to perform this operation.\",\r\n    \"errors\": [\r\n      {\r\n        \"message\": \"SSL is required to perform this operation.\",\r\n        \"domain\": \"global\",\r\n        \"reason\": \"sslRequired\"\r\n      }\r\n    ],\r\n    \"status\": \"PERMISSION_DENIED\"\r\n  }\r\n}\r\n*/\r\n","import React from 'react';\r\nimport './BookCard.scss';\r\n\r\ntype Props = {\r\n  book: Book,\r\n  changePage: () => void,\r\n  bookSelection: (book: Book) => void,\r\n};\r\n\r\nexport const BookCard: React.FC<Props> = ({ book, changePage, bookSelection }) => {\r\n  const volume = book.volumeInfo;\r\n  const defaultCover = 'https://ruslania.com/pictures/books_photos/30/309288/9785917615868_l.jpg';\r\n\r\n  return (\r\n    <div className=\"BookCard\">\r\n      <div>\r\n        <a\r\n          href={volume.previewLink}\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n          className=\"BookCard__link\"\r\n        >\r\n          <img\r\n            title=\"Search in google books\"\r\n            className=\"BookCard__img\"\r\n            src={volume.imageLinks?.thumbnail || defaultCover}\r\n            alt=\"Book cover\"\r\n          />\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"BookCard__info\">\r\n        <p className=\"BookCard__info--category\">\r\n          {volume.categories?.filter(cat => cat[0]) || 'No category'}\r\n        </p>\r\n\r\n        <h3\r\n          className=\"BookCard__info--title\"\r\n          title=\"More about the book\"\r\n          onClick={() => {\r\n            changePage();\r\n            bookSelection(book);\r\n          }}\r\n        >\r\n          {volume.title}\r\n        </h3>\r\n\r\n        <p className=\"BookCard__info--autor\">\r\n          {volume.authors?.map(aut => aut).join(', ')}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport './CurrentBook.scss';\r\nimport { getBookById } from '../../api/api';\r\n\r\ntype Props = {\r\n  changePage: () => void,\r\n  book: Book,\r\n};\r\nexport const CurrentBook: React.FC<Props> = ({ changePage, book }) => {\r\n  const [volume, setVolume] = useState({} as Book);\r\n\r\n  useEffect(() => {\r\n    getBookById(book.id).then((foundBook) => setVolume(foundBook))\r\n  }, [book.id])\r\n\r\n  const cover: BookImage = volume.volumeInfo?.imageLinks;\r\n  const defaultCover = 'https://ruslania.com/pictures/books_photos/30/309288/9785917615868_l.jpg';\r\n  const bookCover = cover?.medium || cover?.small || cover?.smallThumbnail || cover?.thumbnail;\r\n\r\n  return (\r\n    <div className=\"CurrentBook\">\r\n      <h2\r\n        className=\"CurrentBook__title\"\r\n        onClick={changePage}\r\n      >\r\n        Return to books list\r\n      </h2>\r\n\r\n      <div className=\"CurrentBook__book\">\r\n        <img\r\n          className=\"CurrentBook__book--img\"\r\n          src={bookCover || defaultCover}\r\n          alt=\"Book cover\"\r\n        />\r\n\r\n        <div className=\"CurrentBook__info\">\r\n          <div className=\"CurrentBook__info--details\">\r\n            {volume.volumeInfo?.categories?.map(cata => cata).join(', ')}\r\n          </div>\r\n\r\n          <h2>\r\n            {volume.volumeInfo?.title}\r\n          </h2>\r\n\r\n          <div className=\"CurrentBook__info--details\">\r\n            {volume.volumeInfo?.authors?.map(autor => autor).join(' / ')}\r\n          </div>\r\n\r\n          <div className=\"CurrentBook__info--description\" dangerouslySetInnerHTML={{ __html: volume.volumeInfo?.description }} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport './BookList.scss';\r\nimport '../BookCard/BookCard';\r\nimport { BookCard } from '../BookCard/BookCard';\r\nimport { CurrentBook } from '../CurrentBook/CurrentBook';\r\n\r\ntype Props = {\r\n  allBook: Book[],\r\n  showMessage: boolean,\r\n  totalBook: string | number,\r\n  setPage:  React.Dispatch<React.SetStateAction<number>>\r\n  page: number,\r\n  getBook: () => void,\r\n  setLoad: (mes: string) => void\r\n};\r\n\r\nexport const BookList: React.FC<Props> = ({ allBook, showMessage, totalBook, setPage, page, getBook, setLoad }) => {\r\n  const [selectedBook, setSelectedBook] = useState({} as Book);\r\n  const [pageInfo, setPageInfo] = useState('list');\r\n\r\n  const changePageSelectedBook = () => {\r\n    setPageInfo('book');\r\n  };\r\n\r\n  const changePageBookList = () => {\r\n    setPageInfo('list');\r\n  };\r\n\r\n  const bookSelection = (book: Book) => {\r\n    setSelectedBook(book);\r\n  };\r\n\r\n  return (\r\n    <div className=\"BookList\">\r\n      {showMessage && (\r\n        <h2 className=\"BookList__count\">\r\n          {totalBook > 0 ? `Found ${totalBook} results` : 'Not found any book'}\r\n        </h2>\r\n      )}\r\n\r\n      {pageInfo === 'list' &&\r\n        <div>\r\n          < ul className=\"BookList__list\">\r\n            {allBook && allBook.map(book =>\r\n              <li\r\n                key={book.id}\r\n                className=\"BookList__list--item\"\r\n              >\r\n                <BookCard book={book} changePage={changePageSelectedBook} bookSelection={bookSelection} />\r\n              </li>\r\n            )}\r\n          </ul>\r\n\r\n          <div  className=\"BookList__pagination\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"BookList__pagination--button\"\r\n              onClick={() => {\r\n                setLoad('load');\r\n                getBook();\r\n              }}\r\n            >\r\n              Next page\r\n            </button>\r\n          </div>\r\n        </div>\r\n      }\r\n\r\n      {pageInfo === 'book' && <CurrentBook changePage={changePageBookList} book={selectedBook} />}\r\n    </div >\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\ntype Props = {\r\n  searchBook: string,\r\n  setSearchBook: (event: string) => void,\r\n  selectedCategory: string,\r\n  setSelectedCategory: (event: string) => void,\r\n  sortBy: string,\r\n  setSortBy: (event: string) => void,\r\n  getBook: () => void,\r\n  totalBook: string | number,\r\n  setLoad: (text: string) => void,\r\n  setShowMessage: (mes: boolean) => void,\r\n  setPage: (page: number) => void,\r\n}\r\n\r\nexport const FormList: React.FC<Props> = ({\r\n  searchBook,\r\n  setSearchBook,\r\n  selectedCategory,\r\n  setSelectedCategory,\r\n  sortBy,\r\n  setSortBy,\r\n  getBook,\r\n  totalBook,\r\n  setLoad,\r\n  setShowMessage,\r\n  setPage\r\n}) => {\r\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchBook(event.target.value);\r\n  };\r\n\r\n  const handleSelectedFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectedCategory(event.target.value);\r\n  };\r\n\r\n  const handleSelectedSort = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSortBy(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form\r\n        className=\"App__form\"\r\n        onSubmit={(event) => {\r\n          event.preventDefault();\r\n          // setSearchBook('');\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          className=\"App__form--item App__input\"\r\n          placeholder=\"Search book\"\r\n          value={searchBook}\r\n          onChange={handleInput}\r\n        />\r\n\r\n        <div>\r\n          {'Categories '}\r\n          <select\r\n            value={selectedCategory}\r\n            onChange={handleSelectedFilter}\r\n            className=\"App__form--item\"\r\n          >\r\n            <option value=\"\">All</option>\r\n            <option value=\"art\">Art</option>\r\n            <option value=\"biography\">Biography</option>\r\n            <option value=\"computers\">Computers</option>\r\n            <option value=\"history\">History</option>\r\n            <option value=\"medical\">Medical</option>\r\n            <option value=\"poetry\">Poetry</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          {'Sorting by '}\r\n          <select\r\n            value={sortBy}\r\n            onChange={handleSelectedSort}\r\n            className=\"App__form--item\"\r\n          >\r\n            <option value=\"relevance\">Relevance</option>\r\n            <option value=\"newest\">Newest</option>\r\n          </select>\r\n        </div>\r\n\r\n        <button\r\n          className=\"App__form--item\"\r\n          onClick={() => {\r\n            getBook();\r\n            setShowMessage(true);\r\n            setLoad('load')\r\n            setPage(-30)\r\n          }}\r\n        >\r\n          Search\r\n        </button>\r\n\r\n      </form>\r\n\r\n      {totalBook > 0 &&\r\n        <a\r\n          href=\"#root\"\r\n          className=\"App__buttonUp\"\r\n        >\r\n          &uarr;\r\n        </a>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\nimport { getBooks } from './api/api';\nimport { BookList } from './components/BooksList/BookList';\nimport './App.scss';\nimport { FormList } from './components/FormList/FormList';\n\nexport const App: React.FC = () => {\n  const [totalBook, setTotalBook] = useState<string | number>('')\n  const [allBook, setAllBook] = useState<Book[]>([]);\n  const [searchBook, setSearchBook] = useState('The Google Story (2018 Updated Edition)');\n  const [selectedCategory, setSelectedCategory] = useState<string>('');\n  const [sortBy, setSortBy] = useState<string>('relevance');\n  const [load, setLoad] = useState('');\n  const [showMessage, setShowMessage] = useState<boolean>(false);\n  const [page, setPage] = useState<number>(0);\n\n  console.log(page);\n\n  const getBook = async () => {\n    const found = await getBooks(searchBook, sortBy, selectedCategory, page);\n\n    if (found) {\n      setLoad('finish');\n    }\n\n    setPage((page: number) => page + 30);\n    setAllBook(found.items);\n    setTotalBook(found.totalItems)\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__header\">\n        <h1 className=\"App__title\">Search for books</h1>\n\n        <FormList\n          searchBook={searchBook}\n          setSearchBook={setSearchBook}\n          selectedCategory={selectedCategory}\n          setSelectedCategory={setSelectedCategory}\n          sortBy={sortBy}\n          setSortBy={setSortBy}\n          getBook={getBook}\n          totalBook={totalBook}\n          setLoad={setLoad}\n          setShowMessage={setShowMessage}\n          setPage={setPage}\n        />\n      </div>\n\n      {load === 'load' && (\n        <div className=\"App__preloader\">\n          <div className=\"App__preloader--loader\"></div>\n        </div>\n      )}\n\n      {load === 'finish' &&\n        <BookList\n          allBook={allBook}\n          showMessage={showMessage}\n          totalBook={totalBook}\n          page={page}\n          setPage={setPage}\n          getBook={getBook}\n          setLoad={setLoad}\n        />}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n// import { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  // <BrowserRouter>\n    <App />,\n  // </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}